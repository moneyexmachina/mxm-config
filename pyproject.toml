[project]
name = "mxm-config"
version = "0.1.0"
description = "MXM configuration loader and context resolver"
authors = [
  { name = "mxm", email = "contact@moneyexmachina.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
  "omegaconf>=2.3.0,<3.0.0"
]

[tool.poetry]
packages = [
  { include = "mxm_config" },
]
include = [
  "mxm_config/examples/demo_config/*.yaml"
]
[tool.poetry.group.dev.dependencies]
ruff = "^0.13.0"
black = "^25.1.0"
isort = "^6.0.1"
ipython = "^9.5.0"
pytest = "^8.4.2"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

# -------------------------
# Coding standards
# -------------------------

[tool.ruff]
line-length = 88
target-version = "py312"
# Select rulesets; expand gradually if desired
select = ["E", "F", "B", "ANN"]
ignore = ["ANN101", "ANN102"]
# Exclude common non-source dirs
exclude = ["build", "dist", ".venv"]


[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["mxm_config"]
known_third_party = ["omegaconf"]
combine_as_imports = true

[tool.pyright]
typeCheckingMode = "strict"            # or "strict" if you want more enforcement
include = ["mxm_config"]
exclude = ["build", "dist", "docs", ".venv"]
pythonVersion = "3.12"
pythonPlatform = "All"
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
